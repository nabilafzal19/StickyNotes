{"version":3,"sources":["App.js","index.js"],"names":["intialNotesState","lastNoteCreated","totalNotes","notes","notesReducer","prevState","action","type","newState","Date","toTimeString","slice","length","payload","console","log","filter","note","id","App","useState","noteInput","setNoteInput","useReducer","notesState","dispatch","dropNote","event","target","style","left","pageX","top","pageY","className","onDragOver","stopPropagation","preventDefault","onSubmit","newNote","Math","random","text","rotate","floor","placeholder","value","onChange","map","transform","draggable","onDragEnd","onDoubleClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAIMA,EAAkB,CACtBC,gBAAiB,KACjBC,WAAW,EACXC,MAAM,IAGFC,EAAe,SAACC,EAAUC,GAC3B,OAAOA,EAAOC,MAEZ,IAAK,WACH,IAAMC,EAAW,CAChBP,iBAAiB,IAAIQ,MAAOC,eAAeC,MAAM,EAAE,GACnDT,WAAYG,EAAUF,MAAMS,OAAQ,EACpCT,MAAM,GAAD,mBAAOE,EAAUF,OAAjB,CAAuBG,EAAOO,WAGpC,OADAC,QAAQC,IAAIP,GACLA,EAGT,IAAK,cAYJ,OANgB,2BACXH,GADW,IAEdH,WAAWG,EAAUF,MAAMS,OAAO,EAClCT,MAAOE,EAAUF,MAAMa,QAAO,SAAAC,GAAI,OAAEA,EAAKC,KAAKZ,EAAOO,aASxD,QACK,SAmEGM,EA/DF,WACV,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BC,qBAAWnB,EAAaJ,GAAtD,mBAAOwB,EAAP,KAAkBC,EAAlB,KAmBMC,EAAW,SAACC,GAEjBA,EAAMC,OAAOC,MAAMC,KAAnB,UAA6BH,EAAMI,MAAM,GAAzC,MACAJ,EAAMC,OAAOC,MAAMG,IAAnB,UAA4BL,EAAMM,MAAQ,GAA1C,OAqBF,OACE,sBAAKC,UAAU,MAAMC,WAnBN,SAACR,GACdA,EAAMS,kBACNT,EAAMU,kBAiBR,UACE,+CAAkBb,EAAWtB,cAE7B,uBAAMoC,SA7CO,SAACX,GAGf,GAFDA,EAAMU,iBACNvB,QAAQC,IAAIS,GACPH,EAAJ,CAGA,IAAMkB,EAAS,CACbrB,GAAGsB,KAAKC,SACRC,KAAMrB,EACNsB,OAAOH,KAAKI,MAAqB,GAAfJ,KAAKC,WAGzBhB,EAAS,CAAClB,KAAK,WAAYM,QAAQ0B,IACnCjB,EAAa,MAgCaY,UAAU,YAAnC,UACC,0BAAUW,YAAY,wBAAwBC,MAAOzB,EAAU0B,SAAU,SAACpB,GAAD,OAASL,EAAaK,EAAMC,OAAOkB,UAC3G,4CAEFtB,EAAWrB,MAAM6C,KAAI,SAAA/B,GAAI,OACvB,qBAAKiB,UAAU,OAAOL,MAAO,CAACoB,UAAU,UAAD,OAAWhC,EAAK0B,OAAhB,SAA+BO,UAAU,OAAOC,UAAWzB,EAAU0B,cAAe,kBAvBpGlC,EAuB2HD,EAAKC,GAhB3JO,EAAS,CAAClB,KAAK,cAAeM,QAAQK,SAItCJ,QAAQC,IAAI,OAXc,IAACG,GAuBvB,SACE,qBAAKgB,UAAU,OAAf,SAAuBjB,EAAKyB,gBC/FtCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d3896f57.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { useState,useReducer } from 'react';\nimport './App.css'\nconst intialNotesState ={\n  lastNoteCreated: null,\n  totalNotes:0,\n  notes:[],\n}\n\nconst notesReducer = (prevState,action)=>{\n     switch(action.type)\n     {\n       case 'ADD_NOTE':{\n         const newState = {\n          lastNoteCreated: new Date().toTimeString().slice(0,8),\n          totalNotes: prevState.notes.length +1,\n          notes:  [...prevState.notes,action.payload],\n         };\n         console.log(newState);\n         return newState;\n       }\n\n       case 'DELETE_NOTE':{\n        // for(note of notes)\n        // {\n        //   if(note.id === action.payload.id)\n\n        // }\n      const  updatedNote ={\n          ...prevState,\n          totalNotes:prevState.notes.length-1,\n          notes: prevState.notes.filter(note=>note.id!==action.payload)\n\n        }\n        return updatedNote;\n        \n\n  \n         \n       }\n       default:\n            return;\n     }\n}\n\n const App = () => {\n   const [noteInput,setNoteInput] = useState('');\n   const [notesState,dispatch] = useReducer(notesReducer,intialNotesState)\n   \n   const addNote = (event)=>{\n    event.preventDefault();\n    console.log(notesState)\n     if(!noteInput)\n     return;\n     \n     const newNote ={\n       id:Math.random(),\n       text: noteInput,\n       rotate:Math.floor(Math.random() *20),\n     };\n   \n     dispatch({type:'ADD_NOTE' ,payload:newNote});\n     setNoteInput(\"\");\n\n    \n   }\n   const dropNote = (event)=> {\n \n    event.target.style.left = `${event.pageX-50}px`;\n    event.target.style.top = `${event.pageY - 50}px`;\n\n   }\n   const dragOver= (event)=>{\n      event.stopPropagation();\n      event.preventDefault();\n   }\n   const doubleClickHandler = (id) =>{\n    //  const deleteNote ={\n    //    id:notesState.notes.map(note=>(note.id)),\n    \n       \n    \n    // }\n    dispatch({type:'DELETE_NOTE', payload:id})\n    // const modified = \n  \n    // console.log(deleteNote.id)\n    console.log('hey')\n  \n   }\n  return (\n    <div className=\"app\" onDragOver={dragOver}>\n      <h1>Sticky Notes {notesState.totalNotes}</h1>\n\n      <form onSubmit={addNote} className=\"note-form\"> \n       <textarea placeholder=\"create your note here\" value={noteInput}onChange={(event)=>setNoteInput(event.target.value)}></textarea>\n        <button>Add</button>\n      </form>\n     {notesState.notes.map(note =>(\n        <div className=\"note\" style={{transform:`rotate(${note.rotate}deg)`}} draggable=\"true\" onDragEnd={dropNote} onDoubleClick={()=>doubleClickHandler(note.id)}>\n          <pre className=\"text\">{note.text}</pre>\n          </div>\n       \n     ))}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}