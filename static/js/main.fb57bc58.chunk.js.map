{"version":3,"sources":["App.js","index.js"],"names":["intialNotesState","lastNoteCreated","totalNotes","notes","notesReducer","prevState","action","type","newState","Date","toTimeString","slice","length","payload","console","log","App","useState","noteInput","setNoteInput","useReducer","notesState","dispatch","dropNote","event","target","style","left","pageX","top","pageY","className","onDragOver","stopPropagation","preventDefault","onSubmit","newNote","id","Math","random","text","rotate","floor","placeholder","value","onChange","map","note","transform","draggable","onDragEnd","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAIMA,EAAkB,CACtBC,gBAAiB,KACjBC,WAAW,EACXC,MAAM,IAGFC,EAAe,SAACC,EAAUC,GAC3B,OAAOA,EAAOC,MAEZ,IAAK,WACH,IAAMC,EAAW,CAChBP,iBAAiB,IAAIQ,MAAOC,eAAeC,MAAM,EAAE,GACnDT,WAAYG,EAAUF,MAAMS,OAC5BT,MAAM,GAAD,mBAAOE,EAAUF,OAAjB,CAAuBG,EAAOO,WAGpC,OADAC,QAAQC,IAAIP,GACLA,EAET,QACK,SAkDGQ,EA9CF,WACV,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA8BC,qBAAWhB,EAAaJ,GAAtD,mBAAOqB,EAAP,KAAkBC,EAAlB,KAiBMC,EAAW,SAACC,GAEjBA,EAAMC,OAAOC,MAAMC,KAAnB,UAA6BH,EAAMI,MAAM,GAAzC,MACAJ,EAAMC,OAAOC,MAAMG,IAAnB,UAA4BL,EAAMM,MAAQ,GAA1C,OAOF,OACE,sBAAKC,UAAU,MAAMC,WALN,SAACR,GACdA,EAAMS,kBACNT,EAAMU,kBAGR,UACE,8CAEA,uBAAMC,SA9BO,SAACX,GAGf,GAFDA,EAAMU,iBACNpB,QAAQC,IAAIM,GACPH,EAAJ,CAGA,IAAMkB,EAAS,CACbC,GAAGC,KAAKC,SACRC,KAAMtB,EACNuB,OAAOH,KAAKI,MAAqB,GAAfJ,KAAKC,WAEzBjB,EAAS,CAACf,KAAK,WAAYM,QAAQuB,IACnCjB,EAAa,MAkBaY,UAAU,YAAnC,UACC,0BAAUY,YAAY,wBAAwBC,MAAO1B,EAAU2B,SAAU,SAACrB,GAAD,OAASL,EAAaK,EAAMC,OAAOmB,UAC3G,4CAEFvB,EAAWlB,MAAM2C,KAAI,SAAAC,GAAI,OACvB,qBAAKhB,UAAU,OAAOL,MAAO,CAACsB,UAAU,UAAD,OAAWD,EAAKN,OAAhB,SAA+BQ,UAAU,OAAOC,UAAW3B,EAAlG,SACE,qBAAKQ,UAAU,OAAf,SAAuBgB,EAAKP,gBC5DtCW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fb57bc58.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { useState,useReducer } from 'react';\nimport './App.css'\nconst intialNotesState ={\n  lastNoteCreated: null,\n  totalNotes:0,\n  notes:[],\n}\n\nconst notesReducer = (prevState,action)=>{\n     switch(action.type)\n     {\n       case 'ADD_NOTE':{\n         const newState = {\n          lastNoteCreated: new Date().toTimeString().slice(0,8),\n          totalNotes: prevState.notes.length,\n          notes:  [...prevState.notes,action.payload],\n         };\n         console.log(newState);\n         return newState;\n       }\n       default:\n            return;\n     }\n}\n\n const App = () => {\n   const [noteInput,setNoteInput] = useState('');\n   const [notesState,dispatch] = useReducer(notesReducer,intialNotesState)\n   const addNote = (event)=>{\n    event.preventDefault();\n    console.log(notesState)\n     if(!noteInput)\n     return;\n     \n     const newNote ={\n       id:Math.random(),\n       text: noteInput,\n       rotate:Math.floor(Math.random() *20),\n     };\n     dispatch({type:'ADD_NOTE' ,payload:newNote});\n     setNoteInput(\"\");\n\n    \n   }\n   const dropNote = (event)=> {\n \n    event.target.style.left = `${event.pageX-50}px`;\n    event.target.style.top = `${event.pageY - 50}px`;\n\n   }\n   const dragOver= (event)=>{\n      event.stopPropagation();\n      event.preventDefault();\n   }\n  return (\n    <div className=\"app\" onDragOver={dragOver}>\n      <h1>Sticky Notes</h1>\n\n      <form onSubmit={addNote} className=\"note-form\"> \n       <textarea placeholder=\"create your note here\" value={noteInput}onChange={(event)=>setNoteInput(event.target.value)}></textarea>\n        <button>Add</button>\n      </form>\n     {notesState.notes.map(note =>(\n        <div className=\"note\" style={{transform:`rotate(${note.rotate}deg)`}} draggable=\"true\" onDragEnd={dropNote}>\n          <pre className=\"text\">{note.text}</pre>\n          </div>\n     ))}\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}